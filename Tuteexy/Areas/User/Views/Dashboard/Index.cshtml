@model Tuteexy.Models.ViewModels.UserHomeVM


<div class="breadcrumb is-small is-white" aria-label="breadcrumbs">
    <ul>
        <li><a href="#" class="has-text-weight-bold" aria-current="page">User</a></li>
        <li class="is-active">
            <a asp-area="User"
               asp-controller="Dashboard"
               asp-action="index" class="has-text-weight-bold">Dashboard</a>
        </li>

    </ul>
</div>
<!-- Main container -->
<div class="level">
    <!-- Left side -->
    <div class="level-left">
        <div class="level-item">
            <div class="title has-text-white">
                <strong>User Dashboard</strong>
            </div>
        </div>
    </div>

    <!-- Right side -->
    <div class="level-right">

    </div>
</div>


@if (Model != null)
{
<div class="columns is-success is-multiline">
    @foreach (SchoolNotice item in Model.SchoolNotice)
    {
<div class="column">
    <article class="tile is-child box notification is-danger">
        <p class="title is-4 py-0 my-0 has-text-black">@item.Title</p>
        <div class="content">
            @Html.Raw(item.Description)
        </div>
    </article>
</div>}
</div>


                <div class="columns is-success is-multiline">
                    @foreach (Homework item in Model.Homework)
                    {
    <div class="column">
        <article class="tile is-child box notification is-warning">
            <p class="title is-4 py-0 my-0 has-text-black">Title: @item.Title</p>
            <p class="subtitle is-6 py-0 my-0 has-text-black"><strong>Post By:</strong> @item.Teacher.Name</p>
            <p class="subtitle is-6 py-0 my-0"><strong>Subject:</strong> @item.Subject </p>
            <p class="subtitle is-6 py-0 my-0"><strong>Date Assigned:</strong> @item.DateAssigned.ToString("dd/MMM/yyyy hh:mm tt") </p>
            <p class="subtitle is-6"><strong>Date Due:</strong> @item.DateDue.ToString("dd/MMM/yyyy") </p>

            <p class="subtitle is-6">
                @if (string.IsNullOrWhiteSpace(@item.RefLink) == false && (string.IsNullOrEmpty(item.RefLink) == false))
                {
<a href="@item.RefLink" class="button is-small is-success has-text-white">
    <span class="icon is-medium">
        <i class="fas fa-link"></i>
    </span>  <span>Attachment</span>
</a>}
                @{ var eml = "mailto:" + @item.Teacher.Email; }

                <a href="@eml" class="button is-small is-link has-text-white">
                    <span class="icon is-medium">
                        <i class="fas fa-link"></i>
                    </span>  <span>Reply</span>
                </a>
            </p>
            <p class="subtitle is-6">

            </p>
            <div class="content">
                @Html.Raw(item.Description)
            </div>
        </article>
    </div>}
                </div>}

