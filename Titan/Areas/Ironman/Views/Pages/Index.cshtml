@model IEnumerable<Titan.Models.Page>


    <div class="breadcrumb is-small is-white" aria-label="breadcrumbs">
        <ul>
            <li>
                <a asp-area="Ironman"
                   asp-controller="Pages"
                   asp-action="index"><strong>Pages</strong></a>
            </li>
            <li class="is-active"><a href="#" class="has-text-white" aria-current="page"><strong>Index</strong></a></li>
        </ul>
    </div>
    <!-- Main container -->
    <div class="level">
        <!-- Left side -->
        <div class="level-left">
            <div class="level-item">
                <div class="title has-text-white">
                    <strong>Page's List</strong>
                </div>
            </div>
        </div>

        <!-- Right side -->
        <div class="level-right">
            <div class="buttons has-addons is-centered">
                <a class="button is-warning" asp-area="Ironman" asp-controller="Pages" asp-action="Upsert">Create</a>
            </div>
        </div>
    </div>


    <div class="table-container pb-0 mb-0">
        <table class="table table is-bordered is-striped is-narrow is-hoverable is-fullwidth">
            <thead>
                <tr>
                    <th><abbr title="Name">Page Name</abbr></th>

                    <th></th>
                </tr>
            </thead>
            @*<tfoot>
                    <tr>
                        <th><abbr title="Name">Page Name</abbr></th>
                        <th><abbr title="Desc">Description</abbr></th>
                        <th></th>
                    </tr>
                </tfoot>*@
            <tbody>
                @foreach (var item in Model)
                {
    <tr>
        <td class="text-left">
            @Html.DisplayFor(modelItem => item.PageName)
        </td>

        <td>
            <div class="buttons has-addons is-centered">
                <button class="button is-danger">Delete</button>

                <a class="button is-primary" asp-area="Ironman" asp-controller="Pages" asp-action="Upsert" asp-route-id="@item.PageID">Edit</a>
            </div>
            @*<div class="buttons are-small px-4" style="justify-content : space-around;">
                    <button class="button is-primary">Primary</button>
                    <button class="button is-link">Link</button>
                </div>

                <div class="field is-grouped has-addons" style="justify-content : space-around;">
                    <p class="control">
                        <a class="button" asp-area="Ironman" asp-controller="Pages" asp-action="Edit" asp-route-PagesID="@item.PageID">
                            <span class="icon has-text-primary is-large">
                                <i class="fas fa-edit fa-1x"></i>
                            </span>
                        </a>
                    </p>
                    <p class="control">
                        <a class="modal-button" data-target="modalx" data-prmid="@item.PageID" data-prmname="@item.PageName">
                            <span class="icon has-text-danger">
                                <i class="fas fa-ban fa-1x"></i>
                            </span>
                        </a>
                    </p>
                </div>*@
        </td>
    </tr>
}
            </tbody>
        </table>
    </div>

    @*<div id="modalx" class="modal">
            <div class="modal-background modal-button" data-target="modalx"></div>
            <div class="modal-card">
                <header class="modal-card-head">
                    <p class="modal-card-title">Delete</p>
                    <button class="delete modal-button" aria-label="close" data-target="modalx"></button>
                </header>
                <section class="modal-card-body has-text-dark">
                    Are you sure, do you want to delete?
                    <p><label id="lblname" name="lblname" class="font-weight-bold"></label></p>
                </section>
                <footer class="modal-card-foot">

                    <form asp-area="Ironman" asp-controller="Pages" asp-action="Delete">
                        @Html.AntiForgeryToken()
                        <input type="hidden" id="deleteid" name="deleteid" value="" />
                        <button type="submit" class="button is-fullwidth is-danger px-5">
                            <span>Confirm</span>
                        </button>
                    </form>

                </footer>
            </div>
        </div>*@

    @*<div id="modalx" class="modal">
            <div class="modal-background"></div>
            <div class="modal-card">
                <header class="modal-card-head">
                    <p class="modal-card-title">Modal title</p>
                    <button class="delete modal-button" aria-label="close" data-target="modalx"></button>
                </header>
                <section class="modal-card-body">

                </section>
                <footer class="modal-card-foot">
                    <button class="button is-success">Save changes</button>
                    <button class="button">Cancel</button>
                </footer>
            </div>
        </div>*@


<script>
    function Delete(url) {
        swal({
            title: "Are you sure you want to Delete?",
            text: "You will not be able to restore the data!",
            icon: "warning",
            buttons: true,
            dangerMode: true
        }).then((willDelete) => {
            if (willDelete) {
                $.ajax({
                    type: "DELETE",
                    url: url,
                    success: function (data) {
                        if (data.success) {
                            toastr.success(data.message);
                            dataTable.ajax.reload();
                        }
                        else {
                            toastr.error(data.message);
                        }
                    }
                });
            }
        });
    }
</script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {

            // Get all "modal-button" elements
            const $modalbutton = Array.prototype.slice.call(document.querySelectorAll('.modal-button'), 0);

            // Check if there are any navbar burgers
            if ($modalbutton.length > 0) {

                // Add a click event on each of them
                $modalbutton.forEach(el => {
                    el.addEventListener('click', () => {

                        // Get the target from the "data-target" attribute
                        let prmid = el.dataset.prmid;
                        let prmname = el.dataset.prmname;


                        let target = el.dataset.target;
                        let $target = document.getElementById(target);

                        // Toggle the "is-active" class on both the "navbar-burger" and the "navbar-menu"
                        el.classList.toggle('is-active');
                        $target.classList.toggle('is-active');
                        document.getElementsByTagName('html').classList.toggle('is-clipped');
                    });
                });
            }
        });
    </script>
