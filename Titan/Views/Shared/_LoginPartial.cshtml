@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager



@if (SignInManager.IsSignedIn(User))
{
<div class="navbar-item has-dropdown is-hoverable">
    <a class="navbar-link">
        <strong>@await Component.InvokeAsync("UserName")</strong>
    </a>
    <div class="navbar-dropdown">
        <a class="navbar-item" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a>
        <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "Customer" })">
            <button type="submit" class="button is-white is-fullwidth navbar-item">
                <span class="icon is-medium">
                    <i class="fab fa-sign-out"></i>
                </span>
                <span>Logout</span>
            </button>
        </form>
    </div>

</div>
}
else
{
<div class="navbar-item">
    <div class="buttons">
        <a class="button is-light" asp-area="Identity" asp-page="/Account/Login">
            Log in
        </a>
        <a class="button is-success" asp-area="Identity" asp-page="/Account/Register">
            <strong>START FREE</strong>
        </a>
    </div>
</div>
}



